{
	"name": "weko2Test01",
	"properties": {
		"folder": {
			"name": "weko/simple run"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "weko2Test01",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "56g",
			"driverCores": 8,
			"executorMemory": "56g",
			"executorCores": 8,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/8b3b8a60-1dd0-4824-8770-2ed6a55d8e27/resourceGroups/ltiantestRG/providers/Microsoft.Synapse/workspaces/ltianscusworkspace/bigDataPools/weko2Test01",
				"name": "weko2Test01",
				"type": "Spark",
				"endpoint": "https://ltianscusworkspace.dev.azuresynapse-dogfood.net/livyApi/versions/2019-11-01-preview/sparkPools/weko2Test01",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "2.4",
				"nodeCount": 3,
				"cores": 8,
				"memory": 56,
				"extraHeader": null
			}
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"# Run some simple query\n",
					"\n",
					"from pyspark import SparkConf, SparkContext\n",
					"from pyspark.sql import SQLContext\n",
					"from pyspark.sql.functions import countDistinct, col, count, when\n",
					"\n",
					"for n in range(10):\n",
					"    df = spark.range(0, 20000000 + n)\n",
					"    columns = [countDistinct(col(c)).alias(c) for c in df.columns]\n",
					"    df.select(columns).collect()"
				],
				"attachments": null,
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"# Check Spark configurations\n",
					"\n",
					"for i in sc.getConf().getAll():\n",
					"    print(i, len(i[0]))"
				],
				"attachments": null,
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "scala"
					},
					"collapsed": true
				},
				"source": [
					"%%spark\n",
					"\n",
					"import java.lang.ClassLoader\n",
					"\n",
					"val cl = ClassLoader.getSystemClassLoader\n",
					"cl.asInstanceOf[java.net.URLClassLoader].getURLs.foreach(println)"
				],
				"attachments": null,
				"execution_count": 6
			}
		]
	}
}